<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<?xml-stylesheet type="text/css" href="sdocbook.css"   ?>
<section><sectioninfo><date> 1. June 2000 </date></sectioninfo>
<title> ZIP Access </title>    <subtitle>Accessing Zip Archives with ZLib Decompression</subtitle>

<!--border--> 

<section>
<title> The Library </title>

<para>
 The <ulink url="zziplib.html">zziplib library</ulink> offers users the
 ability to easily extract data from files archived in a single
 zip file. This way, programs that use many "read-only" files from
 a program specific source directory can have a single zip
 archive
</para>
<para>
 This library offers only a (free) subset of compression methods
 provided in a full implementation but that is well enough. The
 idea here is that <constant>zip/unzip</constant> utilities can be used
 to create archives that will later be read by using this library.
 Yet those programmes (or a library with their functionality)
 is not needed in that final operation.
</para>

</section><section>
<title> Using A Zip-File </title>

<para>
 Before a file in the zip-archive is accessed, the application
 must first get a handle to the central directory contained in the
 zip-file. This is achived by calling 
 <ulink url="zziplib.html#zzip_dir_open"> zzip_dir_open </ulink>
 or 
 <ulink url="zziplib.html#zzip_dir_fdopen"> zzip_dir_fdopen </ulink>.
 The directory entries in the zip-archives can be obtained
 with
 <ulink url="zziplib.html#zzip_dir_read"> zzip_dir_read </ulink>.
 After being done, the zip-dir handle should be closed with
 <ulink url="zziplib.html#zzip_dir_close"> zzip_dir_close </ulink>.
</para>
<para><screen> ZZIP_DIR* dir = zzip_dir_open("test.zip",0);
 if (dir) {
   ZZIP_DIRENT dirent;
   if (zzip_dir_read(dir,&amp;dirent) {
     /* show info for first file */
     print("%s %i/%i", dirent.d_name, dirent.d_csize, dirent.st_size);
   }
   zzip_dir_close(dir);
 }
</screen></para>
<para>
 From the zip-dir handle a compressed file can be opened
 for reading. This is achieved by using 
 <ulink url="zziplib.html#zzip_file_open"> zzip_file_open </ulink>
 and providing it with the dir-handle and a name of the file.
 The function
 <ulink url="zziplib.html#zzip_file_read"> zzip_file_read </ulink>
 is used to get pieces of uncompressed data from the file, and
 the file-handle should be closed with
 <ulink url="zziplib.html#zzip_file_close"> zzip_file_close </ulink>
</para>
<para><screen> ZZIP_FILE* fp = zzip_file_open(dir,"README",0);
 if (fp) {
   char buf[10];
   zzip_ssize_t len = zzip_file_read(fp, buf, 10);
   if (len) {
     /* show head of README */
     write(1, buf, len); 
   }
   zzip_file_close(fp);
 } 
</screen></para>

</section><section>
<title> Magic Zipped Files </title>

<para>
 There is actually no need to directly use the zip-centric functions
 as described above. Instead there are magic replacements for the
 posix calls <literal>open/read/close</literal> and 
 <literal>opendir/readdir/closedir</literal>. The prototypes of these
 functions had been the guideline for the design of their magic
 counterparts of the
 <ulink url="zziplib.html">zziplib library</ulink>.
</para>
<para>
 The magic functions are described in a seperated document on
 <ulink url="zzip-file.html"> Using Zipped Files </ulink>. In general,
 the functions have a prefix <constant>zzip_</constant> and their argument
 types have a prefix <constant>ZZIP_</constant> where appropriate. Calls
 to the magic functions and the direct functions above can
 be mixed as long as the magic functions have not been opening
 a real file.
</para>
<para>
 To detect a real file (or directory), the info functions
 <ulink url="zziplib.html#zzip_file_real"> zzip_file_real </ulink>
 and
 <ulink url="zziplib.html#zzip_dir_real"> zzip_dir_real </ulink>
 can be used.
 If these return a true value, the standard posix functions
 are more apropriate. The posix handles can be obtained with
 a call to
 <ulink url="zziplib.html#zzip_realdir"> zzip_realdir </ulink> and
 <ulink url="zziplib.html#zzip_realfd"> zzip_realfd </ulink> respectivly.
</para>

</section><section>
<title> Errors &amp; Infos </title>

<para>
 There are a set of error and info functions available. To handle
 error conditions specific to the
 <ulink url="zziplib.html">zziplib library</ulink>
 there are these functions:
 <ulink url="zziplib.html#zzip_error"> zzip_error </ulink>,
 <ulink url="zziplib.html#zzip_seterror"> zzip_seterror </ulink>
 and their string representations with
 <ulink url="zziplib.html#zzip_strerror"> zzip_strerror </ulink>,
 <ulink url="zziplib.html#zzip_strerror_of"> zzip_strerror_of </ulink>.
 The magic functions will map any of these specific library
 error conditions to the more generic system <literal>errno</literal>
 codes with
 <ulink url="zziplib.html#zzip_errno"> zzip_errno </ulink>.
</para>
<para>
 More information on stream can be obtained with
 <ulink url="zziplib.html#zzip_dir_stat"> zzip_dir_stat </ulink> and
 <ulink url="zziplib.html#zzip_dirhandle"> zzip_dirhandle. </ulink>
 The latter is used to obtain the dir-handle that every zipped file 
 handle has even if not explicitly opened.
</para>
<para>
 The usage of many functions are shown in the example programs
 that come along with the
 <ulink url="zziplib.html">zziplib library</ulink>. See the files
 <ulink url="zzcat.c"> zzcat.c </ulink> and
 <ulink url="zzdir.c"> zzdir.c </ulink>. The 
 <ulink url="zziptest.c"> zziptest.c </ulink> program needs the
 private header file 
 <ulink url="zzip.h"> zzip.h </ulink> whereas the library installer
 will only copy the public include file 
 <ulink url="zziplib.h"> zziplib.h </ulink> to your system's
 <constant>include</constant> directory.
</para>
</section></section>
